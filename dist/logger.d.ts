declare const winston: any;
declare const Logging: any;
declare const systemlogger: Console;
declare const REDIRECT_STD = false;
declare const path: any;
declare const fs: any;
declare const Util: any;
declare const os: any;
declare const moment: any;
declare const ENV: string | undefined;
declare const CLEAN_MATCHES: string;
declare const COLORED_CONSOLE: string;
declare const CONSOLE_DEBUG_LEVEL: string;
declare const PRJ_ROOT: string;
declare const USE_WINSTON: string;
declare const ADD_WINSTON_CONSOLE_STREAM: string;
declare const logPath: any;
declare function isString(s: any): boolean;
declare function asString(arg: any): any;
declare var transportDebug: any;
declare var transportError: any;
declare const format: any;
declare const transports: any[];
declare const wLogger: any;
declare const DEFAULT_PROJECT_NAME: any;
declare const GOOGLE_APPLICATION_CREDENTIALS: string | undefined;
declare const serviceAccount: any;
declare const projectId: any;
declare const logging: any;
declare let logName: string;
declare const stackDriverLogger: any;
declare const ColorReset = "\u001B[0m";
declare const colorCodes: {
    Bright: string;
    Dim: string;
    Underscore: string;
    Blink: string;
    Reverse: string;
    Hidden: string;
    black: string;
    red: string;
    green: string;
    yellow: string;
    blue: string;
    FgMagenta: string;
    cyan: string;
    white: string;
    BgBlack: string;
    BgRed: string;
    BgGreen: string;
    BgYellow: string;
    BgBlue: string;
    BgMagenta: string;
    BgCyan: string;
    BgWhite: string;
};
declare const colors: {};
declare const getReqClientIp: (request: any) => string;
declare const toCommonLogFormat: (request: any, logType: any, caller: any) => any[];
declare const toCommonLogFormatLite: (request: any, logType: any, caller: any) => any;
declare const callerName: (level?: number) => {
    parentName: string;
    stackLine: string;
    funcName: string;
};
declare class Logger {
    request: any;
    toCommonLogFormatLite(request: any, logType: any, caller: any): any;
    getLogger(request: any): Logger;
    _log(): void;
    info(): void;
    warn(): void;
    error(): void;
    debug(): void;
}
declare const formatedLogger: Logger;
